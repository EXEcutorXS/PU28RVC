#include "main.h"
#include "system.h"
#include "backup.h"
#include "hcu.h"

Backup backup;

void Backup::init()
{
    REG32(RCU_APB1EN) |= RCU_APB1EN_PMUEN;
    REG32(RCU_APB1EN) |= RCU_APB1EN_BKPIEN;
    REG32(PMU_CTL)    |= PMU_CTL_BKPWEN;

    if (initFlag==0xC0FF)
    {
        for(int i=0; i<sizeof(backup)/2; i++)
        {
			*(uint16_t*)(&backup+2*i) = REG16(BKP_DATA_0+2*i);
        }
		reloadCounter++;
    }
    
	

}

void Backup::handler()
{
	
	initFlag=0xC0FF;
	heaterButtonFlag = air.isFHeaterOn?0xC0FF:0;
	elementButtonFlag = air.isEHeaterOn?0xC0FF:0;
	airOnFlag = air.isAirOn?0xC0FF:0;
	waterButtonFlag = air.isWaterOn?0xC0FF:0;
	pumpManualButtonFlag = hcu.pumpOn?0xC0FF:0;
	systemEstimatedMinutes = (hcu.timerOffSystem - core.getTick())/60000;
	pumpEstimatedSeconds = (hcu.timerPumpOn - core.getTick())/1000;
	waterEstimatedSeconds = (hcu.timerOffDomesticWater - core.getTick())/1000;
	
	
for(int i=0; i<sizeof(backup)/2; i++)
	REG16(BKP_DATA_0+2*i) = *(uint16_t*)(&backup+2*i) ;
        
}

void Backup::restoreData()
{
	air.isFHeaterOn = heaterButtonFlag==0xC0FF;
	air.isEHeaterOn = elementButtonFlag==0xC0FF;
	air.isAirOn = airOnFlag == 0xC0FF;
	air.isWaterOn = waterButtonFlag == 0xC0FF;
	hcu.pumpOn = pumpManualButtonFlag == 0xC0FF;
	hcu.timerOffSystem = core.getTick()+systemEstimatedMinutes*60000;
	hcu.timerPumpOn = core.getTick()+pumpEstimatedSeconds*1000;
	hcu.timerOffDomesticWater = core.getTick()+waterEstimatedSeconds*1000;
}